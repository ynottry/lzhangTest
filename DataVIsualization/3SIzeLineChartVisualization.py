

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

import matplotlib.pyplot as plt


tips = pd.read_csv('./DataComparisonSize.txt', header=None, sep='\t',names=['blockPosition','PreBlocks','TestSize','Methods','TrainingSize','RMSE'])
# blockIndex=35
# preBlocks in [1,13]
# testSize in [10,60]
# methods in 1,2,3,4





def get_methodComparion(tips,method,blockIndex,testSize):
    result=tips[(tips['blockPosition'] == blockIndex) & (tips['Methods'] == method) & (tips['TestSize'] == testSize)]
    return result
  



#Part1  Drawing picture with Varying TestSize

color=['r','b','g','y']
method=['[txin,txout,invalue,receiveTime,waitingtime]','[txin,txout,receiveTime,waitingtime]','[txin,txout,invalue,waitingtime]','[txin,txout,waitingtime]']
testSizeLabel=['testSize=100','TestSize=200']

testSize=[100,200]
for t in range(testSize.__len__()):    
    Result_Y=[]
    
    tSize=testSize[t]
    for i in range(4):
        Records=get_methodComparion(tips, i+1, 100,tSize)
        methodeResult=Records['RMSE']
        Result_Y.append(methodeResult)
        labellist=Records['TrainingSize']
    
    x =list(range(labellist.shape[0]))    
    
    plt.figure(figsize=(12,8))
    
    plt.subplot(2,1,1)
    for i in range(4):
        plt.plot(x, Result_Y[i],color[i], label=method[i])
    plt.xticks(x, labellist, rotation=0,fontsize=6.5)
    plt.yticks(fontsize=6.5)
    plt.xlabel('TraingDataset-generated by increasing preblocks')
    
    plt.ylabel('RMSE in testSize-'+str(tSize))
    
    plt.title('Subplot1: RMSE of Different methods on Varying Training Dataset') 
    plt.legend(bbox_to_anchor=[0.3, 1])
     
    plt.subplot(2,1,2)
    for i in range(4):
        plt.plot(x[10:], Result_Y[i][10:],color[i], label=method[i])
    plt.xticks(x[10:], labellist[10:], rotation=0,fontsize=6.5)
    plt.yticks(fontsize=6.5)
    plt.xlabel('TraingDataset-generated by increasing preblocks')
    
    plt.ylabel('RMSE in testSize-'+str(tSize))
    
    plt.title('Subplot2: RMSE of Different methods on Varying Training Dataset')
    plt.legend(bbox_to_anchor=[0.3, 1])
    
    plt.subplots_adjust(wspace =0, hspace =0.3)
    #plt.savefig("RMSE of Different methods on Varying Training Dataset Size Sample %d.pdf"%(tSize))


Result_Size=[]
for t in range(testSize.__len__()):    
  Records=get_methodComparion(tips, i+1, 100,testSize[t])
  methodeResult=Records['RMSE']
  Result_Size.append(methodeResult)
  labellist=Records['TrainingSize']
x =list(range(labellist.shape[0])) 
plt.figure()
plt.subplot(2,1,1)
for i in range(testSize.__len__()):
  plt.plot(x, Result_Y[i],color[i], label=testSizeLabel[i])
  plt.xticks(x, labellist, rotation=0,fontsize=6.5)
plt.yticks(fontsize=6.5)
plt.xlabel('TraingDataset-generated by increasing preblocks')

plt.ylabel('RMSE in testSize')

plt.title('RMSE of Different testSize on Varying Training Dataset') 
plt.legend(bbox_to_anchor=[0.3, 1])

plt.subplot(2,1,2)
for i in range(testSize.__len__()):
  plt.plot(x[10:], Result_Y[i][10:],color[i], label=testSizeLabel[i])
  plt.xticks(x[10:], labellist[10:], rotation=0,fontsize=6.5)
plt.yticks(fontsize=6.5)
plt.xlabel('TraingDataset-generated by increasing preblocks')

plt.ylabel('RMSE in testSize')

plt.title('RMSE of Different testSize on Varying Training Dataset') 
plt.legend(bbox_to_anchor=[0.3, 1])


plt.show()
