

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

import matplotlib.pyplot as plt


tips = pd.read_csv('./DataComparisonRatio1.txt', header=None, sep='\t',names=['blockPosition','PreBlocks','TestRatio','TestSize','TrainingSize','RMSE'])
# blockIndex=35
# preBlocks in [1,13]
# testSize in [10,60]
# methods in 1,2,3,4





def get_RatioComparion(tips,testRatio,blockIndex):
    result=tips[(tips['blockPosition'] == blockIndex) & (tips['TestRatio'] == testRatio)]
    return result





#Part1  Drawing picture with Varying TestSize

color=['r','b','g','y','c','m','k']
method=['Ratio=0.3','Ratio=0.5','Ratio=0.8','Ratio=1.2','Ratio=2.0','Ratio=3.0','Ratio=4.0']


testRatioSet=[0.3,0.5,0.8,1.2,2.0,3.0,4.0]
Result_Y=[] 
for t in range(testRatioSet.__len__()):      
    tRatio=testRatioSet[t]
    Records=get_RatioComparion(tips, tRatio, 100)
    methodeResult=Records['RMSE']
    Result_Y.append(methodeResult)
    labellist=Records['TrainingSize']
    x =list(range(labellist.shape[0]))  

plt.figure(12)


plt.subplot(2,1,1) 
for i in range(Result_Y.__len__()):
    if i in range(testRatioSet.__len__()):
        plt.plot(x, Result_Y[i],color[i], label=method[i])


plt.xticks(x, labellist, rotation=0,fontsize=5)
plt.yticks(fontsize=6.5)
plt.xlabel('TraingDataset-generated by increasing preblocks 1-99')

plt.ylabel('RMSE in various testRatio')

plt.title('RMSE of Different testRatio on Varying Training Dataset') 
plt.legend(loc='upper right',fontsize='xx-small')

plt.subplot(2,2,3) 
for i in range(Result_Y.__len__()):
    if i in range(testRatioSet.__len__()):
        plt.plot(x[0:46], Result_Y[i][0:46],color[i], label=method[i])


plt.xticks(x[0:46], labellist[0:46], rotation=0,fontsize=5)
plt.yticks(fontsize=6.5)
plt.xlabel('TraingDataset-generated by increasing preblocks 1-46')

plt.ylabel('RMSE in various testRatio')

plt.title('RMSE of Different testRatio on Varying Training Dataset') 
plt.legend(loc='upper right',fontsize='xx-small')




plt.subplot(2,2,4) 
for i in range(Result_Y.__len__()):
    if i in range(testRatioSet.__len__()):
        plt.plot(x[46:], Result_Y[i][46:],color[i], label=method[i])


plt.xticks(x[46:], labellist[46:], rotation=0,fontsize=5)
plt.yticks(fontsize=6.5)
plt.xlabel('TraingDataset-generated by increasing preblocks 47-99')

plt.ylabel('RMSE in various testRatio')

plt.title('RMSE of Different testRatio on Varying Training Dataset') 
plt.legend(loc='upper right',fontsize='xx-small')

plt.subplots_adjust(wspace =0.15, hspace =0.3)

plt.savefig("Ratio_RMSE of Different testRatio on Varying Training Dataset.pdf")
plt.show()
