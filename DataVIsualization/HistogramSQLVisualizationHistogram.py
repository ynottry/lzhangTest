'''
Created on 16 Jun. 2019

@author: limengzhang
'''
import numpy as np
import pandas as pd

import matplotlib.pyplot as plt


tips = pd.read_csv('./DataComparison.txt', header=None, sep='\t',names=['blockPosition','PreBlocks','TestSize','Methods','TrainingSize','RMSE'])
# blockIndex=35
# preBlocks in [1,13]
# testSize in [10,60]
# methods in 1,2,3,4





def get_methodComparion(tips,method,blockIndex,testSize):
    result=tips[(tips['blockPosition'] == blockIndex) & (tips['Methods'] == method) & (tips['TestSize'] == testSize)]
    return result

#print(get_methodComparion(tips, 1, 100,100))

Result_Y=[]

for i in range(4):
    Records=get_methodComparion(tips, i+1, 100,100)
    methodeResult=Records['RMSE']
    Result_Y.append(methodeResult)
    labellist=Records['TrainingSize']

x =list(range(labellist.shape[0]))
total_width,n = 0.8, 4
width = total_width/n  

  
plt.bar(x, Result_Y[0], width=width, label='[txin,txout,invalue,receiveTime,waitingtime]',fc = 'r')
for i in range(len(x)):
    x[i] = x[i] + width
plt.bar(x, Result_Y[1], width=width, label='[txin,txout,receiveTime,waitingtime]',tick_label = labellist,fc = 'y')

for i in range(len(x)):
    x[i] = x[i] + width
plt.bar(x, Result_Y[2], width=width, label='[txin,txout,invalue,waitingtime]',tick_label = labellist,fc = 'b')

for i in range(len(x)):
    x[i] = x[i] +width
plt.bar(x, Result_Y[3], width=width, label='[txin,txout,waitingtime]',tick_label = labellist,fc = 'g')

plt.xlabel('TraingDataset-generated by increasing preblocks')

plt.ylabel('RMSE in testSize 10')

plt.title('RMSE of Different methods on Varying Training Dataset')



plt.legend()
plt.show()




  
